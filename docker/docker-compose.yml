version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend.Dockerfile
    container_name: ecommerce-backend
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/ecommerce.db
    volumes:
      - backend_data:/app/data
    networks:
      - ecommerce-network
    restart: unless-stopped

  frontend:
    build:
      context: ./ecommerce-frontend
      dockerfile: ../docker/frontend.Dockerfile
    container_name: ecommerce-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - ecommerce-network
    restart: unless-stopped

  database:
    image: postgres:13-alpine
    container_name: ecommerce-database
    environment:
      - POSTGRES_DB=ecommercedb
      - POSTGRES_USER=ecommerce
      - POSTGRES_PASSWORD=ecommerce123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    networks:
      - ecommerce-network
    restart: unless-stopped

volumes:
  backend_data:
  postgres_data:

networks:
  ecommerce-network:
    driver: bridge

